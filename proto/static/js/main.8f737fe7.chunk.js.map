{"version":3,"sources":["Contexts/Contexts.js","Components/NavBar.js","Components/OneText.js","Components/TextCard.js","Pages/Home.js","Pages/About.js","Components/UserInfo.js","Components/NewText.js","Pages/Profile.js","Components/TextList.js","Pages/Texts.js","Components/Register.js","Components/Login.js","Pages/LoginRegister.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","UserContextProvider","props","useState","username","name","password","email","image","user","setUser","Provider","value","createUser","console","log","children","TextListContext","TextListContextProvider","description","tags","texts","addText","newText","NavBar","localStorage","getItem","history","useHistory","className","style","navStyle","to","onClick","clear","push","display","flexDirection","justifyContent","backgroundColor","padding","OneText","ModalStyle","close","src","t","alt","map","tag","position","textDecoration","width","margin","border","TextCard","showForm","state","setState","toggleForm","e","preventDefault","formStyle","marginTop","Home","useContext","About","UserInfo","profileBoxStyle","profileImageStyle","height","NewText","setUsername","setName","setTags","setImage","setDesc","onSubmit","evt","type","required","onChange","target","Profile","TextList","Texts","Register","setPassword","password2","setPassword2","setEmail","alert","Login","setItem","LoginRegister","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8f737fe7.chunk.js","sourcesContent":["import React, { createContext,  useState } from 'react';\r\n\r\nexport const UserContext = createContext();\r\nexport const UserContextProvider = (props) => {\r\n    const [user, setUser] = useState(\r\n        {\r\n            username: 'Käyttäjä', \r\n            name: 'Elli Esimerkki', \r\n            password: '', \r\n            email: 'elli@metropolia.fi',\r\n            image: 'img/DefaultUser.jpg'\r\n        }\r\n    );\r\n    const createUser = (username, name, password, email, image) => {\r\n        setUser({username, name, password, email, image});\r\n        console.log(user);\r\n    }\r\n    return (\r\n        <UserContext.Provider value={{user, createUser}}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    );\r\n}\r\n\r\nexport const TextContext = createContext();\r\nexport const TextContextProvider = (props) => {\r\n    const [text, inputText] = useState(\r\n        {\r\n            name: '',\r\n            username: '', \r\n            image: 'img/DefaultUser.jpg',\r\n            description: '',// = the text\r\n            tags : []\r\n        }\r\n    );\r\n    const createText = (name, username, image, description, tags) => {\r\n        inputText({name, username, image, description, tags})\r\n    }\r\n    return (\r\n        <TextContext.Provider value={{text, createText}}>\r\n            {props.children}\r\n        </TextContext.Provider>\r\n    );\r\n}\r\n\r\nexport const TextListContext = createContext();\r\nexport const TextListContextProvider = (props) => {\r\n    const [texts, addText] = useState(\r\n        [\r\n            {\r\n                name: 'ensimmäinen', \r\n                username: 'rollo', \r\n                image: null, \r\n                description: 'opettelen kirjoittaaaaaa', \r\n                tags: ['testi', 'huumori']\r\n            }\r\n        ]\r\n    );\r\n    const newText = (name, username, image, description, tags) => {\r\n        addText([...texts, {name, username, image, description, tags}]);\r\n    }\r\n    return (\r\n        <TextListContext.Provider value={{texts, newText}}>\r\n            {props.children}\r\n        </TextListContext.Provider>\r\n    );\r\n}","import React, { useContext } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nexport const NavBar = () => {\r\n    console.log(localStorage.getItem('token'));\r\n    const history = useHistory();\r\n\r\n    const logout = () => {\r\n        localStorage.clear();\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div className='NavBar' >\r\n            <header>Decamerone</header>\r\n            <div style={navStyle}>\r\n                <Link to='/'>Etusivu</Link>\r\n                <Link to='/tietoa'>Tietoja meistä</Link>\r\n                <Link to='/kirjoitukset'>Katsele kirjoituksia</Link>\r\n                {localStorage.getItem('token') ? \r\n                    <Link to='/profiili'>Profiili</Link>\r\n                    :\r\n                    <Link to='/kirjaudu'>Kirjaudu sisään</Link>\r\n                }\r\n                {localStorage.getItem('token') && \r\n                    <Link to='/' onClick={logout}>Kirjaudu ulos</Link>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst navStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-evenly',\r\n    backgroundColor: '#00b359',\r\n    padding: '2vh'\r\n}","import React from 'react';\r\n\r\nexport const OneText = (props) => {\r\n    //name, username, image, description, tags\r\n    return (\r\n        <div className='OneText' style={ModalStyle}>\r\n            <button onClick={props.close}>Sulje</button>\r\n            <img src={props.t.image} alt='Thematic art'/>\r\n            <h3>{props.t.name}</h3>\r\n            <p>{props.t.description}</p>\r\n            {localStorage.getItem('token') ? <p>Kirjoittaja: {props.t.username} Tykkäyksiä: N kpl</p>: ''}\r\n            <p className='tags'>Aihesanat: {props.t.tags.map(tag => tag + ' ')}</p>\r\n            <button>Tykkää</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ModalStyle = {\r\n    display: 'flex',\r\n    position: 'absolute',\r\n    backgroundColor: 'lightgray',\r\n    flexDirection: 'column',\r\n    textDecoration: 'none',\r\n    width: '80vh',\r\n    margin: 'auto',\r\n    border: 'dotted 2px #00b359'\r\n}","import React, { useState } from 'react';\r\nimport { OneText } from './OneText';\r\n\r\nexport const TextCard = (props) => {\r\n    const [state, setState] = useState(\r\n        {showForm: false}\r\n    );\r\n\r\n    const toggleForm = (e) => {\r\n        e.preventDefault();\r\n        setState({showForm: !state.showForm});\r\n    }\r\n\r\n    //name, username, image, description, tags\r\n    return (\r\n        <div className='TextCard' style={formStyle}>\r\n            <img src={props.t.image} alt='Thematic art'/>\r\n            <h3>{props.t.name}</h3>\r\n            <p>{props.t.description}</p>{/*only part of this (preview), not all!*/}\r\n            <button onClick={toggleForm}>Avaa koko teksti</button>\r\n            {localStorage.getItem('token') ? <p>Kirjoittaja: {props.t.username} Tykkäyksiä: N kpl</p>: ''}\r\n            <p className='tags'>Aihesanat: {props.t.tags.map(tag => tag + ' ')}</p>\r\n\r\n            {state.showForm ? <OneText t={props.t} close={toggleForm}/> : ''}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst formStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    textDecoration: 'none',\r\n    width: '60vh',\r\n    margin: 'auto',\r\n    marginTop: '4vh',\r\n    border: 'dotted 2px #00b359'\r\n}","import React, { useContext } from 'react';\r\nimport { UserContext, TextListContext } from '../Contexts/Contexts';\r\nimport { TextCard } from '../Components/TextCard';\r\n\r\nexport const Home = () => {\r\n    const { user } = useContext(UserContext);\r\n    const { texts } = useContext(TextListContext);\r\n\r\n    console.log(user);\r\n    return (\r\n        <div className='Home'>\r\n            <h1>Kotisivu</h1>\r\n            Näyteteksti:\r\n            <TextCard t={texts[0]/*randomize this or smth*/}/>\r\n        </div>\r\n    );\r\n}","import React, { useContext } from 'react';\r\nimport { UserContext } from '../Contexts/Contexts';\r\n\r\nexport const About = () => {\r\n    const { user } = useContext(UserContext);\r\n    console.log(user);\r\n    return (\r\n        <div className='About'>\r\n            <h1>Tietoa meistä</h1>\r\n        </div>\r\n    );\r\n}","import React, { useContext } from 'react';\r\nimport { UserContext } from '../Contexts/Contexts';\r\n\r\nexport const UserInfo = () => {\r\n    const { user } = useContext(UserContext);\r\n    console.log(user);\r\n    return (\r\n        <div className='UserInfo' style={profileBoxStyle}>\r\n            <img className='ProfileImg' src={user.image} alt='' style={profileImageStyle}/>\r\n            <ul>\r\n                <li>{user.name}</li>\r\n                <li>{user.username}</li>\r\n                <li>{user.email}</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst profileImageStyle = {\r\n    width: '20vh', \r\n    height: '30vh'\r\n}\r\n\r\nconst profileBoxStyle = {\r\n    width: '60vh',\r\n    margin: 'auto',\r\n    border: 'dotted 2px #00b359'\r\n}","import React, { useState, useContext } from 'react';\r\nimport { UserContext, TextListContext } from '../Contexts/Contexts';\r\n\r\nexport const NewText = () => {\r\n    const { newText } = useContext(TextListContext);\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [tags, setTags] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [description, setDesc] = useState('');\r\n    \r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        newText(name, username, image, description, [tags]);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} style={formStyle}>\r\n            <h3>Luo uusi teksti</h3>\r\n            <br></br>\r\n            <label>Tekstin nimi</label>\r\n            <input type=\"text\" \r\n                value={name} \r\n                required \r\n                onChange={(evt) => \r\n                    setName(evt.target.value)}/>\r\n            <label>Käyttäjänimi (oma)</label>\r\n            <input type=\"text\" \r\n                value={username} \r\n                required \r\n                onChange={(evt) => \r\n                    setUsername(evt.target.value)}/>\r\n            <label>Teksti</label>\r\n            <textarea type=\"text\" \r\n                value={description} \r\n                required \r\n                onChange={(evt) => \r\n                    setDesc(evt.target.value)}/>\r\n            <label>Kuvan URL</label>\r\n            <input type=\"text\" \r\n                value={image} \r\n                onChange={(evt) => \r\n                    setImage(evt.target.value)}/>\r\n            <label>Tunnisteet</label>\r\n            <input type=\"text\"\r\n                value={tags} \r\n                onChange={(evt) => \r\n                    setTags(evt.target.value)}/>\r\n            <input type=\"submit\" value=\"Tallenna\" style={{backgroundColor: '#00b359'}}/>\r\n        </form>\r\n    )\r\n}\r\nconst formStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    textDecoration: 'none',\r\n    width: '60vh',\r\n    margin: 'auto',\r\n    border: 'dotted 2px #00b359'\r\n}","import React from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\n\r\nimport { UserInfo } from '../Components/UserInfo';\r\nimport { NewText } from '../Components/NewText';\r\n\r\nexport const Profile = () => {\r\n    const history = useHistory();\r\n    const logout = () => {\r\n        localStorage.clear();\r\n        history.push('/');\r\n    }\r\n\r\n    if (!localStorage.getItem('token')) {\r\n        return <Redirect to='/'/>\r\n    } else {\r\n        return (\r\n            <div className='Profile'>\r\n                <h1>Profiili</h1>\r\n                <UserInfo/>\r\n                <button onClick={logout}>Kirjaudu ulos</button>\r\n                <NewText/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useContext } from 'react';\r\nimport { TextListContext } from '../Contexts/Contexts';\r\nimport { TextCard } from '../Components/TextCard';\r\n\r\nexport const TextList = () => {\r\n    const { texts } = useContext(TextListContext);\r\n    console.log(texts);\r\n    return (\r\n        <div className='TextList'>\r\n            {texts.map(t => <TextCard t={t}/>)}\r\n        </div>\r\n    );\r\n}","import React, { useContext, useState } from 'react';\r\nimport { UserContext } from '../Contexts/Contexts';\r\nimport { TextList } from '../Components/TextList';\r\nimport { NewText } from '../Components/NewText';\r\n\r\nexport const Texts = () => {\r\n    const { user } = useContext(UserContext);\r\n    const [state, setState] = useState(\r\n        {showForm: false}\r\n    );\r\n\r\n    const toggleForm = (e) => {\r\n        e.preventDefault();\r\n        setState({showForm: !state.showForm});\r\n    }\r\n\r\n    console.log(user);\r\n    return (\r\n        <div className='Texts'>\r\n            <h1>Kirjoitukset</h1>\r\n            <button onClick={toggleForm}>{state.showForm ? 'Sulje' : 'Lisää uusi teksti'}</button>\r\n            {state.showForm ? <NewText/> : ''}\r\n            <TextList/>\r\n        </div>\r\n    );\r\n}","import React, { useState, useContext } from 'react';\r\nimport { UserContext } from '../Contexts/Contexts';\r\n\r\nexport const Register = () => {\r\n    const { user } = useContext(UserContext);\r\n    const { createUser } = useContext(UserContext);\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [password2, setPassword2] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [image, setImage] = useState('');\r\n    \r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        if (password === password2) {\r\n            createUser(username, name, password, email, image);\r\n            alert('Luotu käyttäjä ' + username + '!');\r\n            console.log(user);\r\n        } else {\r\n            alert('Korjaa salasana!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} style={formStyle}>\r\n            <br></br>\r\n            <label>Etunimi sukunimi</label>\r\n            <input type=\"text\" \r\n                value={name} \r\n                required \r\n                onChange={(evt) => \r\n                    setName(evt.target.value)}/>\r\n            <label>Käyttäjänimi</label>\r\n            <input type=\"text\" \r\n                value={username} \r\n                required \r\n                onChange={(evt) => \r\n                    setUsername(evt.target.value)}/>\r\n            <label>Sähköposti</label>\r\n            <input type=\"text\" \r\n                value={email} \r\n                required \r\n                onChange={(evt) => \r\n                    setEmail(evt.target.value)}/>\r\n            <label>Kuva URL</label>\r\n            <input type=\"text\" \r\n                value={image} \r\n                onChange={(evt) => \r\n                    setImage(evt.target.value)}/>\r\n            <label>Salasana</label>\r\n            <input type=\"password\"\r\n                value={password} \r\n                required\r\n                onChange={(evt) => \r\n                    setPassword(evt.target.value)}/>\r\n            <label>Salasana uudelleen</label>\r\n            <input type=\"password\"\r\n                value={password2} \r\n                required\r\n                onChange={(evt) => \r\n                    setPassword2(evt.target.value)}/>\r\n            <input type=\"submit\" value=\"Rekisteröidy\" style={{backgroundColor: '#00b359'}}/>\r\n        </form>\r\n    )\r\n}\r\nconst formStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    textDecoration: 'none',\r\n    width: '60vh',\r\n    margin: 'auto',\r\n    border: 'dotted 2px #00b359'\r\n}","import React, { useState, useContext } from 'react';\r\nimport { UserContext } from '../Contexts/Contexts';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const Login = () => {\r\n    const { user } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    \r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        localStorage.setItem('token', 'dummytoken');\r\n        history.push('/profiili');\r\n        /*if (username === user.username && password === user.password) {\r\n            //check if the user exists and place a token\r\n            localStorage.setItem('token', 'dummytoken');\r\n            window.location.reload();\r\n        } else {\r\n            alert('Kirjautumisvirhe! Tarkista käyttäjätunnus ja salasana.');\r\n        }*/\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit} style={formStyle}>\r\n            <br></br>\r\n            <label>Käyttäjänimi</label>\r\n            <input type=\"text\" \r\n                value={username} \r\n                required \r\n                onChange={(evt) => \r\n                    setUsername(evt.target.value)}/>\r\n            <label>Salasana</label>\r\n            <input type=\"password\"\r\n                value={password} \r\n                required\r\n                onChange={(evt) => \r\n                    setPassword(evt.target.value)}/>\r\n            <input type=\"submit\" value=\"Kirjaudu sisään\" style={{backgroundColor: '#00b359'}}/>\r\n        </form>\r\n    )\r\n    \r\n}\r\nconst formStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    textDecoration: 'none',\r\n    width: '60vh',\r\n    margin: 'auto',\r\n    border: 'dotted 2px #00b359'\r\n}","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Register } from '../Components/Register';\r\nimport { Login } from '../Components/Login';\r\n\r\nexport const LoginRegister = () => {\r\n    //const { user } = useContext(UserContext);\r\n    if (localStorage.getItem('token')) {\r\n        return <Redirect to='/profiili'/>\r\n    } else {\r\n        return (\r\n            <div className='LoginRegister'>\r\n                <h1>Kirjaudu sisään</h1>\r\n                <Login/>\r\n                <Register/>\r\n            </div>\r\n        )\r\n    }   \r\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route , Link, Switch, Redirect, withRouter\n} from 'react-router-dom';\n\nimport './App.css';\nimport { UserContextProvider, TextListContextProvider } from './Contexts/Contexts';\n\nimport { NavBar } from './Components/NavBar';\nimport { Home } from './Pages/Home';\nimport { About } from './Pages/About';\nimport { Profile } from './Pages/Profile';\nimport { Texts } from './Pages/Texts';\nimport { LoginRegister } from './Pages/LoginRegister';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <NavBar/>\n\n        <UserContextProvider>\n          <TextListContextProvider>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/tietoa\">\n              <About />\n            </Route>\n            <Route path=\"/profiili\">\n              <Profile />\n            </Route>\n            <Route path=\"/kirjaudu\">\n              <LoginRegister />\n            </Route>\n            <Route path=\"/kirjoitukset\">\n              <Texts />\n            </Route>\n          </Switch>\n          </TextListContextProvider>\n        </UserContextProvider> \n      </Router>          \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}